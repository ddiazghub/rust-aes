use aes::*;

pub fn main() {
    let mut keys: [[u8; 16]; 11] = Default::default();

    let a8 = [
        0x20, 0x24, 0x7a, 0x24,
        0xc2, 0x2c, 0x1a, 0xc1,
        0x2f, 0x75, 0x76, 0xa0,
        0x32, 0xe3, 0xe1, 0x75,
    ];

    keys[7] = [
        0x56, 0xf1, 0x84, 0x8b,
        0x75, 0xad, 0xbb, 0xbe,
        0x14, 0x58, 0xc6, 0x87,
        0x76, 0x4a, 0x9c, 0xe4,
    ];

    keys[8] = [
        0x1d, 0x5c, 0x6b, 0xf7,
        0xab, 0xe2, 0x77, 0xd8,
        0xc3, 0xbd, 0x10, 0x80,
        0xa7, 0x71, 0xba, 0xea,
    ];

    keys[9] = [
        0x51, 0x28, 0x2e, 0x54,
        0xa3, 0x5e, 0xa2, 0x0f,
        0xc7, 0xce, 0x5d, 0x0b,
        0x40, 0xd0, 0x72, 0x35,
    ];

    let aes = AES128::with_keys(keys, Mode::ECB);
    let a9 = aes.round(a8, 7);
    let a10 = aes.round(a9, 8);
    let out = aes.partial_round(a10, 9);

    println!("A8 = {a8:x?}");
    println!("");
    println!("A9 = {a9:x?}");
    println!("A10 = {a10:x?}");
    println!("A11 = {out:x?}");
}
